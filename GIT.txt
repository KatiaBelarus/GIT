                     Основные команды:
pwd - посмотреть где я
mkdir имя папки - создать новую папку
cd  имя папки - зайти в папку
touch имя файла - создать файл
ls - вывести список содержимого папки
cat  имя файла - просмотреть содержимое файла 
cd . . - выйти на уровень выше
mv имя файла(находясь в папке этого файла) полный путь,куда его переместить - переместить файл;
 !!   так-же команда mv применяется для переименования файла  !!
cp имя файла(находясь в папке этого файла) полный путь,куда копировать файл - скопировать файл
nano имя файла - возможность создания текстового файла в режиме реального времени
find имя файла(в текущей папке) - найти файл в текущей папке
head кол-во строк имя файла - выводит несколько первых строк текстового файла (пример: head -3 file.txt)
tail кол-во строк имя файла - выводит несколько последних строк текстового файла (пример: tail -2 file.txt)
less - посмотреть содержимое длинного файла.Если файл слишком большой,то он будет выводиться по частям
date - вывести дату и время
grep - поиск текста по шаблону
clear - почистить терминал
echo текст - выводит на экран строку текста

                      Перемещение с локального репозитория на внешний:
git status
git add название файла
git commit -m "коментарий к коммиту"
git push
git push -u origin - из доп веток в гитхаб

                      Перемещение с внешнего репозитория на локальный:
git fetch
git status
git pull
git clone -скачать чужой гит

Чтобы файл или папка не чекались гитом,нужно создать файл ".gitignor",в котором прописать файлы и папки которые GIT должен игнорировать

                      Ветки:
git branch - покажет все ветки (* ветка где мы сейчас)
git branch название ветки -создаст новую ветку с нашим названием
git branch -D название ветки -удалит ветку с нашим названием
git checkout название ветки - перейти в ветку
git checkout -   переход в другую ветку
git checkout -b название ветки - создать ветку и переместиться в нее
git merge название ветки - соеденить названую ветку с той, в которой мы находимся
git rebase название ветки - перебазирование ветки

                     Прочее:
git log - покажет абсолютно все коммиты (выход - Q)
git log --author имя - покажет изменения,произведённые этим пользователем
git show - покажет последний сделанный коммит и всю инфу о произведённых изменениях
git blame имя файла - покажет кто и когда вносил изменения в этот файл
git blame имя файла (вертикальный слэш) grep текст строки - информация об авторе строки
git blame имя файла (вертикальный слэш) grep имя автора - что изменял конкретный автор
git diff -  какие изменения
git reset HEAD~1 - откатиться на шаг назад
git stash - скрытое временное хранилище изменений
git stash pop - показывает изменённый файл
git stash clear - удаляет из хранилища всю информацию об изменениях
